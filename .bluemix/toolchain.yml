version: '2'
messages:
  $i18n: locales.yml
template:
  name: 'Schematics Terraform Prototype'
  #name:
  #  $ref: "#/messages/template.name"
  description:
    #original static description:
    #$ref: "#/messages/template.description"
    #template descriptions now vary depending on the flavor of source provider selected
    $ref: >
      $env.source_provider === 'githubconsolidated' ? 
      '#/messages/template.description.github' : '#/messages/template.description'
  header: '![](toolchain.svg?localize)'
  icon: icon.svg
  required:
    - terraform-apply
    - terraform-repo
  info:
    #original static git url and branch string definitions
    #git url: >-
    #  [https://github.com/open-toolchain/simple-toolchain-hosted](https://github.com/open-toolchain/simple-toolchain-hosted)
    #git branch: >-
    #  [master](https://github.com/open-toolchain/simple-toolchain-hosted/tree/master)
    
    # compute the git url and branch values dynamically so that they remain correct when repo is forked etc. 
    # note: `repository` url param must always be provided while the `branch` url param is optional
    # the computed urls are of the same format as the original static urls shown above
    git url: >
        '[' + $env.repository + '](' + $env.repository + ')'
    git branch: >
        $env.branch ?
          '[' + $env.branch + ']('+ $env.repository + '/tree/' + $env.branch + ')' :
          '[master]('+ $env.repository + '/tree/master)'
toolchain:
  name: 'simple-schematics-{{timestamp}}'
  template:
    getting_started:
      $ref: "#/messages/template.gettingStarted"
services:
  terraform-repo:
    service_id: >
      $env.source_provider ? $env.source_provider : 'hostedgit'
    parameters:
      repo_name: '{{toolchain.name}}'
      repo_url: >
        $env.type === 'link' ? 
          $env.app_repo : 'https://github.com/Cloud-Schematics/cluster.git'
      source_repo_url: >
        $env.type === 'fork' || $env.type === 'clone' ? 
          $env.app_repo : 'https://github.com/Cloud-Schematics/cluster.git'
      type: $env.type || 'clone'
      has_issues: true
      enable_traceability: true
  terraform-apply:
    service_id: pipeline
    parameters:
      services:
        - terraform-repo
      name: 'terraform apply'
      ui-pipeline: true
      configuration:
        content:
          $text: pipeline.yml
        env:
          TERRAFORM_REPO: terraform-repo
          WORKSPACE_NAME: '{{form.pipeline.parameters.workspace-name}}'
          GITHUB_TOKEN: '{{form.pipeline.parameters.github-token}}'
          API_KEY: '{{form.pipeline.parameters.api-key}}'
        execute: true
  webide:
    service_id: orion
form:
  pipeline:
    parameters:
      workspace-name: 'my-workspace'
    schema:
      $ref: deploy.json
