---
defaultBaseImageVersion: latest
properties:
- name: API_KEY
  value: ${API_KEY}
  type: secure
- name: WORKSPACE_NAME
  value: ${WORKSPACE_NAME}
  type: text
stages:
- name: DEPLOY
  inputs:
  - type: git
    branch: master
    service: ${TERRAFORM_REPO}
  triggers:
  - type: commit
  jobs:
  - name: "Workspace Create"
    type: builder
    build_type: shell
    script: |
      #!/bin/bash
      echo "Workspace $WORKSPACE_NAME"

      #force login again
      # calls to schematics were failing without it, 
      # so I *assume* that schematics only works if you're targeting some regions.
      # my toolchain was originally targeting us-east, but after forcing login to 
      # us-south, things started working.  this is fine for PoC, will have to be resolved
      # for a production template

      ibmcloud login --apikey $API_KEY -r us-south

      # test if schematics plugin is installed
      echo "attempting to locate schematics plugin..."
      if ! ibmcloud plugin list | grep schematics; then
        ibmcloud plugin install schematics -f
      fi

      #check to see if workspace with this name already exists
      if ! ibmcloud terraform workspace list | grep "$WORKSPACE_NAME"; then
        echo '{' \
          "    \"name\": \"$WORKSPACE_NAME\"," \
          '    "type": [' \
          '      "terraform-v1.0"' \
          '    ],' \
          '    "description": "the description",' \
          '    "tags": [],' \
          '    "template_repo": {' \
          '      "url": "$TERRAFORM_REPO"' \
          '    },' \
          '    "template_data": [' \
          '      {' \
          '        "folder": ".",' \
          '        "type": "terraform-v1.0",' \
          '        "values": "",' \
          '        "variablestore": [' \
          '           {' \
          '               "name": "ibmcloud_api_key", ' \
          "               \"value\": \"$API_KEY\" " \
          '           }' \
          '       ]' \
          '      }' \
          '    ]' \
          '  }' > workspace-template.json
        
        # create the workspace
        ibmcloud terraform workspace new -f workspace-template.json
      fi 
  
      # get the workspace id 
      workspaces="$(ibmcloud terraform workspace list | grep "$WORKSPACE_NAME")"
      tokens=( $workspaces )
      workspace_id="${tokens[1]}"
      echo "Found: $workspace_id"

      ibmcloud terraform apply -i $workspace_id --force




